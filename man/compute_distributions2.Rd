% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LR_by_obsSNV_Functions.R
\name{compute_distributions2}
\alias{compute_distributions2}
\title{Compute all distributions - used for power simulation - avoids haveing to re-run this function multiple times}
\usage{
compute_distributions2(peds, subtypes, carrier_prob = 0.002,
  tau_increment = 0.05, seq_dat = NULL, subtype_weights = NULL,
  useK = FALSE)
}
\arguments{
\item{peds}{A ped object containing two or more pedigrees.}

\item{subtypes}{A list of length 2. Contains character labels for the two subtypes that occur in the pedigrees contained in the \code{famStudy_obj}. The label for the more the genetically-complelling subtype must be listed first.}

\item{carrier_prob}{The cumulative carrier probabilty of all crvs as a group.}

\item{tau_increment}{Numeric. The width of the grid for the taus}

\item{subtype_weights}{A vector of length 2.  When assuming an informative prior for the founders; the weights the individuals with subtypes A and B, respectively.  By default, \code{subtype_weights = NULL} so that no founder weights are applied (i.e. flat founder prior).}

\item{assumption}{The assumption to use for computing the LRs (can be "global" or "semi-global")}
}
\value{
A data frame of global configurations anf weights for the set of provided families.
}
\description{
used for power simulation - avoids haveing to re-run this function multiple times
}
\examples{
library(RVMethods)
data(study_pedigrees)

library(SimRVPedigree)
plot(study_pedigrees[study_pedigrees$FamID == 304, ])
plot(study_pedigrees[study_pedigrees$FamID == 58, ])

peds = study_pedigrees[study_pedigrees$FamID \%in\%c(58, 304), ]
subtypes = c("HL", "NHL")


library(SimRVSequences)
# construct an object of class SNVdata
ex_data <- SNVdata(Haplotypes = EXhaps,
                   Mutations = EXmuts)

ex_data$Mutations$is_CRV = FALSE
ex_data$Mutations$is_CRV[c(2, 74)] = TRUE


set.seed(11956)
# simulate SNV data with sim_RVstudy
study_seq <- sim_RVstudy(ped_files = study_pedigrees[study_pedigrees$FamID \%in\%c(58, 304), ],
                         SNV_data = ex_data)

myCombos = test_allcombos_withZero(ped = study_pedigrees[study_pedigrees$FamID == 58, ],
                                   subtypes = c("HL", "NHL"),
                                   tau_grid = make_tauGrid(),
                                   carrier_prob = 0.002)

myCombos = test_subcombos_withZero(ped = study_pedigrees[study_pedigrees$FamID == 58, ],
                                      subtypes = c("HL", "NHL"),
                                      tau_grid = make_tauGrid(),
                                      carrier_prob = 0.002,
                                      seq_dat = study_seq)

my_GDist = compute_globalDist(peds = study_pedigrees[study_pedigrees$FamID \%in\%c(58, 304), ],
                              subtypes = c("HL", "NHL"))

my_GDist2 = compute_globalDist2(peds = study_pedigrees[study_pedigrees$FamID \%in\%c(58, 304), ],
                                subtypes = c("HL", "NHL"),
                                seq_dat = study_seq)

order(my_GDist$LR) == order(my_GDist$w_LR)

}
\keyword{internal}
