% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FamAnalysisFunctions.R
\name{compute_familyWeights}
\alias{compute_familyWeights}
\title{Compute all weights for a pedigree}
\usage{
compute_familyWeights(ped, subtypes, tau_increment = 0.05,
  subtype_weights = NULL, identify_trueConfig = FALSE)
}
\arguments{
\item{ped}{An object of class \code{ped}. A pedigree generated by \code{sim_ped} or \code{sim_RVped}, or an object created by the function \code{new.ped}, for details please see documantation and vignette for package \code{SimRVPedigree}.}

\item{subtypes}{A list of length 2. Contains character labels for the two subtypes that occur in the pedigrees contained in the \code{famStudy_obj}. The label for the more the genetically-complelling subtype must be listed first.}

\item{tau_increment}{Numeric. The width of the grid for the taus}

\item{subtype_weights}{A vector of length 2.  When assuming an informative prior for the founders; the weights the individuals with subtypes A and B, respectively.  By default, \code{subtype_weights = NULL} so that no founder weights are applied (i.e. flat founder prior).}

\item{identify_trueConfig}{Logical. Identify true sharing configuration when \code{ped} includes familial genotypes at the disease locus. By default \code{identify_trueConfigs = FALSE}.}
}
\value{
A data frame containing the weights for each configuration in the pedigree. See Details.
}
\description{
Compute all weights for a pedigree
}
\details{
Note: the parameter space of  \eqn{\tau_a} and \eqn{\tau_b} is given by
\eqn{\Omega_{con} = ((\tau_{a}, \tau_{b}): 0.5 \le \tau_{b} < \tau_{a} \le 1 )}.

The data frame returned by \code{compute_familyWeights} contains the following:
Sharing configuration are identified in the first $n$ columns (i.e. for the $n$ disease-affected relatives), by the identification number of the disease-affected realtive in the pedigree. Following the first $n$ columns the remaining variables are described as follows.

\tabular{ll}{
\strong{name} \tab \strong{description} \cr
\code{binID} \tab This is a numeric identifier for the configuration. Computed by considering the \cr
             \tab configuration as a number in base 2 ands then converting from base 2 to base 10. \cr
             \tab For example, the configuration (1, 0, 1) would have binID = 5 since 101 converted \cr
             \tab from base 2 to base 10 is 5. \cr
\code{K}  \tab The total number of disease-affected relatives who carry a variant in the configuration.  \cr
\code{K_sub}  \tab the number of disease-affected relatives who carry a variant and who are affected \cr
              \tab by the genetically-compelling subtype in the specified configuration \cr
\code{L_max}  \tab The maximum value of the likelihood \cr
\code{L_null}  \tab The likelihood under the null \cr
\code{LR}  \tab The likelihood ratio statistic\cr
\code{tau_A}  \tab \eqn{\hat{\tau}_a}, the MLE of \eqn{\tau_a}\cr
\code{tau_A}  \tab \eqn{\hat{\tau}_b}, the MLE of \eqn{\tau_b} \cr
\code{unique_tau}  \tab Does the likelihood for the configuration have a unique maximum?  \cr
\code{RVsharing}  \tab The RVS probability for the configuration \cr
\code{w_LR}  \tab The transmission-based weight for the specified configuration \cr
\code{w_RVS}  \tab The unmodified RVS weight for the specified configuration \cr
\code{w_RVS2}  \tab The modified RVS weight for the specified configuration \cr
}
}
\examples{
library(SimRVPedigree)
# for more information about specifying pedigrees
# execute help(new.ped) in the console

fam133 = data.frame(FamID = rep(133, 11),
                    ID = seq(1, 11, by  = 1),
                    dadID = c(NA, NA, NA, 1, 1, 1, NA, 3, 3, 3, 6),
                    momID = c(NA, NA, NA, 2, 2, 2, NA, 4, 4, 4, 7),
                    sex = c(0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1),
                    affected = c(F, F, F, F, T, F, F, T, T, T, T),
                    DA1 =   c( 1,  0,  0, 1, 0, 1,  0, 0, 0, 0, 1),
                    DA2 =   c( 0,  0,  0, 0, 0, 0,  0, 1, 0, 1, 0),
                    Gen =   c( 1,  1,  2, 2, 2, 2, 2, 3, 3, 3, 3),
                    subtype = c(NA, NA, NA, NA, "NHL", NA, NA, "HL", "NHL", "HL", "HL"))
fam133 = new.ped(fam133)
plot(fam133, cex = 0.9)

compute_familyWeights(ped = fam133,
                      subtypes = c("HL", "NHL"))

}
\keyword{internal}
